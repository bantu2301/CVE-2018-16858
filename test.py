import subprocess
import subprocess as sub
import re,base64, gzip,io, sys

# decode base64
def decode_bs64(data_bs64):
    return base64.b64decode(data_bs64)

# convert bin to hex
def bin_2_hex(data_bin):
    return data_bin.hex()

# gzip data from decode payload
def gzip_data(data):
    f = gzip.open('data.gz', 'wb')
    f.write(data)
    f.close()

# find base64 string in data
def find_bs64(data):
    return ''.join(re.findall(r'[a-zA-Z0-9=\/+]{30,}', data))
    #return ''.join(re.findall(r'^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$', data))

# read data after ungzip
def read_gzip_data():
    # with gzip.open('data.gzip', 'rb') as f:  
    #     content = f.read()
    #     f.close()

    with gzip.GzipFile('data.gz', mode='rb') as f:
        content = f.read().decode()
        f.close()
    return content

# convert hex to ip address
def hex_to_ip(hex_string):
    temp = []
    i = 0
    while  i < len(hex_string):
        dec = int((hex_string[i:i+2]), 16)
        temp.append(str(dec))
        i += 2
    return '.'.join(temp)

# find ip and port attacker from shellcode(opcode:hex)
# 68: opcode: push
def find_ip_port(data_hex):
    return re.findall(r'68([a-f0-9]{8})680200([a-f0-9]{4})', data_hex)

# find ip and port attacker using for attack
def find_attacker(payload):
    print("+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++")
    payload_step1 = base64.b64decode(payload).decode('UTF-16')
    bs64_step1 = find_bs64(payload_step1)

    payload_step2 = base64.b64decode(bs64_step1+'=')
    gzip_data(payload_step2) 
    data_uzip = read_gzip_data()

    bs64_data_uzip = find_bs64(data_uzip)

    shellcode = decode_bs64(bs64_data_uzip)

    shellcode_hex = bin_2_hex(shellcode)

    ip_port = find_ip_port(shellcode_hex)
    # ip port format: ip.port
    ip_port_str = hex_to_ip(str(ip_port[0][0])) + "." + str(int(ip_port[0][1], 16))

    return ip_port_str

# detect cve-2018-16858 in live traffic using tcpdump
def detect():
    signature = 'vnd.sun.star.script:../../../program/python-core-3.5.5/lib/pydoc.py$tempfilepager'
    flag = 0
    data = ""
    ip_port = ""
    f = open("solieu.txt","w")
    try:
        p = sub.Popen(('tcpdump','-vAs0','tcp', '-i','\Device\{E7C4EEAB-2FE1-435E-B008-FDFD321E2ABD}'), stdout=sub.PIPE)
        #p1 = sub.Popen(('tcpdump','-i','\Device\{E7C4EEAB-2FE1-435E-B008-FDFD321E2ABD}','-w','test.pcap'))
        for row in p.stdout:
            temp = row.strip().decode('utf-8')
            if 'flags' in temp.lower():
                if flag == 0:
                    data = temp
                else:
                    f.write(str(data)+"\n\n")
                    flag = 0
                    data =""
            else:
                if signature in temp:
                    ip_port = data.split('|')[0].split('>')[0]
                    ip = ip_port.split('.')[0]+"."+ip_port.split('.')[1]+"."+ip_port.split('.')[2]+"."+ip_port.split('.')[3]
                    port = ip_port.split('.')[4].strip()
                    print("\n\033[1;77m[\033[0m\033[1;35m+\033[0m\033[1;77m] \033[0m\033[1;35mDetecting CVE-2018-16858 in traffic - Attacker attack system from Src: \033[0m\033[1;77m[%s] \033[0m\033[1;35mand Src Port: \033[0m\033[1;77m[%s]\033[0m\n" % (ip,port))
                data = data +" | "+ temp 
                flag = 1

            #     # if packet not enough data
            #     # if packet enough data
            #     else:
            #         x = data.rindex('-noni -e ') + len('-noni -e ')
            #         y = data.rindex(' &amp;&amp; echo)?language=Python&amp;location=share"')            
            #         payload = data[x:y]
            #         ip_port = find_attacker(payload)
                    
            # if flag == 1:
            #     temp = row.rstrip()
            #     temp = temp.decode('utf-8')

            #     if 'flags' in temp.lower():
            #         pass
            #     else:
            #         temp = temp.replace(''.join(re.findall(r'E.*\.\.',temp)), '')
            #         data += temp
            #         if ' &amp;&amp; echo)?language=Python&amp;location=share"' in data:
            #             x = data.rindex('-noni -e ') + len('-noni -e ')
            #             y = data.rindex(' &amp;&amp; echo)?language=Python&amp;location=share"')
            #             payload = data[x:y]
            #             ip_port = find_attacker(payload)
            #             flag = 0
            
            # if ip_port != "":
            #     if ip_port in row.rstrip().decode():
            #         ip_port_tf = re.findall(r'([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,5})', row.rstrip().decode())
                    
            #         ip_port_target = str('.'.join(ip_port_tf[0]))
            #         if ip_port_target == ip_port:
            #             ip_port_target = str('.'.join(ip_port_tf[1]))

            #         print("Attacker attack system using CVE-2018-16858 from "+ ip_port + " to " + ip_port_target)
            #         print("+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++")
    except KeyboardInterrupt:
        sys.exit(0)

if __name__ == "__main__":
    detect()